#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define LBASE 0
#define LGAMING 1
#define LNAV 2
#define LNUM 3
#define LSYM 4
#define LFN 5
#define LMAGIC 6
#define HRM_A hrm LGUI A
#define HRM_O hrm LALT O
#define HRM_E hrm LCTRL E
#define HRM_U hrm_i LSHFT U
#define HRM_S hrm RGUI S
#define HRM_N hrm RALT N
#define HRM_T hrm RCTRL T
#define HRM_H hrm_i RSHFT H

&sk { quick-release; };

/ {
    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        bt_4: bt_4 {
            label = "BT_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 4>;
        };

        par: par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PAR";
        };

        brc: brc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "BRC";
        };

        brck: brck {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RBKT &kp LEFT>;
            label = "BRCK";
        };

        squot: squot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SQT &kp LEFT>;
            label = "SQUOT";
        };

        dquot: dquot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT>;
            label = "DQUOT";
        };

        vimsave: vimsave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp W &kp RET>;
            label = "VIMSAVE";
        };
    };
};

/ {
    behaviors {
        tdcaps: tdcaps {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&kp CAPS>;
        };

        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        navtd: navtd {
            compatible = "zmk,behavior-tap-dance";
            label = "NAVTD";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&tog 3>;

            tapping-term-ms = <200>;
        };

        symnum: symnum {
            compatible = "zmk,behavior-tap-dance";
            label = "SYMNUM";
            #binding-cells = <0>;
            bindings = <&mo 5>, <&mo 4>;
        };

        plus_1: plus_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "PLUS_1";
            bindings = <&kp PLUS>, <&kp NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        lbrk_2: lbrk_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "LBRK_2";
            bindings = <&kp LEFT_BRACKET>, <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        lbrc_3: lbrc_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "LBRC_3";
            bindings = <&kp LBRC>, <&kp NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        lpar_4: lpar_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_4";
            bindings = <&kp LPAR>, <&kp NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        amp_5: amp_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "AMP_5";
            bindings = <&kp AMPS>, <&kp NUMBER_5>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        eq_6: eq_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "EQ_6";
            bindings = <&kp EQUAL>, <&kp NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        rpar_7: rpar_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAR_7";
            bindings = <&kp RPAR>, <&kp NUMBER_7>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        rbrc_8: rbrc_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "RBRC_8";
            bindings = <&kp RBRC>, <&kp NUMBER_8>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        rbrk_9: rbrk_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "RBRK_9";
            bindings = <&kp RIGHT_BRACKET>, <&kp N9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        ast_0: ast_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "AST_0";
            bindings = <&kp ASTRK>, <&kp NUMBER_0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        exc_perc: exc_perc {
            compatible = "zmk,behavior-mod-morph";
            label = "EXC_PERC";
            bindings = <&kp EXCL>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        pipe_bslsh: pipe_bslsh {
            compatible = "zmk,behavior-mod-morph";
            label = "PIPE_BSLSH";
            bindings = <&kp PIPE>, <&kp BSLH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        dllr_tilde: dllr_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "DLLR_TILDE";
            bindings = <&kp DOLLAR>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        caret_at: caret_at {
            compatible = "zmk,behavior-mod-morph";
            label = "CARET_AT";
            bindings = <&kp CARET>, <&kp AT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        bt_pound: bt_pound {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_POUND";
            bindings = <&kp GRAVE>, <&kp POUND>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings = <
&dllr_tilde  &plus_1   &lbrk_2    &lbrc_3  &lpar_4  &amp_5  &exc_perc                                                                     &pipe_bslsh  &eq_6  &rpar_7   &rbrc_8   &rbrk_9  &ast_0     &caret_at
&kp TAB      &kp SQT   &kp COMMA  &kp DOT  &kp P    &kp Y   &tog 3                                                                        &tog 5       &kp F  &kp G     &kp C     &kp R    &kp L      &bt_pound
&kp ESC      &kp A     &kp O      &kp E    &kp U    &kp I   &kp SEMI   &kp LCTRL  &kp LALT               &kp RALT              &kp RCTRL  &kp MINUS    &kp D  &kp H     &kp T     &kp N    &kp S      &kp SEMI
&navtd       &kp FSLH  &kp Q      &kp J    &kp K    &kp X                         &kp LGUI               &kp RGUI                                      &kp B  &kp M     &kp W     &kp V    &kp Z      &symnum
&mo 2        &none     &none      &none    &none            &kp SPACE  &tdcaps    &kp LS(LA(LCTRL))      &kp LS(LA(LC(LGUI)))  &kp ENTER  &bspc_del           &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &to 1
            >;
        };

        layer_Gaming {
            bindings = <
&kp N5  &kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp F5                                          &none  &none  &none  &none  &none  &none  &none
&kp N6  &kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                                           &none  &none  &none  &none  &none  &none  &none
&kp N7  &kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp G      &kp N5     &kp N6      &none  &none  &none  &none  &none  &none  &none  &none  &none
&kp N8  &kp LCTRL  &kp Z   &kp X   &kp C   &kp V                         &kp N7      &none                &none  &none  &none  &none  &none  &none
&mo 2   &kp LALT   &none   &none   &none           &kp SPACE  &kp LCTRL  &kp N8      &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };

        layer_Magic {
            bindings = <
&none        &none  &none  &none  &none                   &none  &none                                                   &none            &none  &none  &none  &none  &none  &none
&none        &none  &none  &none  &none                   &none  &none                                                   &none            &none  &none  &none  &none  &none  &none
&bootloader  &none  &none  &none  &none                   &none  &none  &bt_2  &bt_3             &bt BT_CLR  &none       &none            &none  &none  &none  &none  &none  &bootloader
&none        &none  &none  &none  &none                   &none                &bt_4             &bl BL_INC                               &none  &none  &none  &none  &none  &none
&none        &none  &none  &none  &rgb_ug RGB_MEFS_CMD 5         &bt_0  &bt_1  &out OUT_USB      &bl BL_DEC  &bl BL_TOG  &rgb_ug RGB_TOG         &none  &none  &none  &none  &none
            >;
        };

        lnav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans    &trans    &trans  &trans     &trans
            >;
        };

        lnum {
            bindings = <
&trans  &trans     &trans  &trans  &trans  &trans     &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp MINUS  &kp N7  &kp N8  &kp N9  &kp N0     &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH                   &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans  &trans  &trans             &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        lsym {
            bindings = <
&trans  &trans          &trans           &trans     &trans     &trans    &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp UNDERSCORE  &kp AMPS         &kp ASTRK  &kp LPAR   &kp RPAR  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp COLON       &kp DOLLAR       &kp PRCNT  &kp CARET  &kp PLUS  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT     &kp POUND  &kp PIPE                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans           &trans     &trans               &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
