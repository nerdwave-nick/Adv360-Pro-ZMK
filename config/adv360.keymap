#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define LBASE 0
#define LGAMING 1
#define LNAV 2
#define LNUM 3
#define LSYM 4
#define LFN 5
#define LMAGIC 6
#define HRM_A hrm LGUI A
#define HRM_O hrm LALT O
#define HRM_E hrm LCTRL E
#define HRM_U hrm_i LSHFT U
#define HRM_S hrm RGUI S
#define HRM_N hrm RALT N
#define HRM_T hrm RCTRL T
#define HRM_H hrm_i RSHFT H

/ {
    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        bt_4: bt_4 {
            label = "BT_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 4>;
        };

        qot: qot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp LEFT>;
            label = "QOT";
        };

        brckts: brckts {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "BRCKTS";
        };

        pars: par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "PAR";
        };

        brcs: brcs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RBRC &kp LEFT>;
            label = "BRCS";
        };

        squot: squot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp DQT &kp LEFT>;
            label = "SQUOT";
        };
    };
};

/ {
    behaviors {
        sticky_imqr: sticky_imqr {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_IMQR";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };

        td_caps_lsft: td_caps_lsft {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CAPS_LSFT";
            #binding-cells = <0>;
            bindings = <&sticky_imqr LSHFT>, <&kp CAPSLOCK>;

            tapping-term-ms = <200>;
        };

        td_cword_rsft: td_cword_rsft {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CWORD_RSFT";
            #binding-cells = <0>;
            bindings = <&sticky_imqr RSHFT>, <&caps_word>;
        };

        mm_del_bspc: mm_del_bspc {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_DEL_BSPC";
            bindings = <&kp BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_RALT|MOD_RGUI|MOD_LGUI|MOD_LALT)>;
        };

        msdquots: msdquots {
            compatible = "zmk,behavior-mod-morph";
            label = "MSDQUOTS";
            bindings = <&squot>, <&qot>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        lbase {
            bindings = <
&kp GRAVE      &kp N1     &kp N2     &kp N3   &kp N4  &kp N5  &kp LEFT_BRACKET                                  &kp RIGHT_BRACKET  &kp NUMBER_6  &kp N7    &kp N8    &kp N9        &kp N0     &kp MINUS
&kp DQT        &kp SQT    &kp COMMA  &kp DOT  &kp P   &kp Y   &kp LPAR                                          &kp RPAR           &kp F         &kp G     &kp C     &kp R         &kp L      &kp EQUAL
&kp ESCAPE     &kp A      &kp O      &kp E    &kp U   &kp I   &kp LBRC          &sl 3  &none      &none  &sl 6  &kp RBRC           &kp D         &kp H     &kp T     &kp N         &kp S      &key_repeat
&td_caps_lsft  &kp FSLH   &kp Q      &kp J    &kp K   &kp X                            &none      &none                            &kp B         &kp M     &kp W     &kp V         &kp Z      &td_cword_rsft
&mo 2          &msdquots  &brckts    &pars    &brcs           &kp SPACE         &sl 4  &none      &sl 7  &sl 5  &mm_del_bspc                     &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &to 1
            >;
        };

        lgaming {
            bindings = <
&kp N5  &kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp F5                                          &none  &none  &none  &none  &none  &none  &none
&kp N6  &kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                                           &none  &none  &none  &none  &none  &none  &none
&kp N7  &kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp G      &kp N5     &kp N6      &none  &none  &none  &none  &none  &none  &none  &none  &none
&kp N8  &kp LCTRL  &kp Z   &kp X   &kp C   &kp V                         &kp N7      &none                &none  &none  &none  &none  &none  &none
&mo 2   &kp LALT   &none   &none   &none           &kp SPACE  &kp LCTRL  &kp N8      &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };

        lmagic {
            bindings = <
&none        &none  &none  &none  &none                   &none  &none                                                   &none            &none  &none  &none  &none  &none  &none
&none        &none  &none  &none  &none                   &none  &none                                                   &none            &none  &none  &none  &none  &none  &none
&bootloader  &none  &none  &none  &none                   &none  &none  &bt_2  &bt_3             &bt BT_CLR  &none       &none            &none  &none  &none  &none  &none  &bootloader
&none        &none  &none  &none  &none                   &none                &bt_4             &bl BL_INC                               &none  &none  &none  &none  &none  &none
&none        &none  &none  &none  &rgb_ug RGB_MEFS_CMD 5         &bt_0  &bt_1  &out OUT_USB      &bl BL_DEC  &bl BL_TOG  &rgb_ug RGB_TOG         &none  &none  &none  &none  &none
            >;
        };

        lmod {
            bindings = <
&trans  &trans             &trans             &trans              &trans              &trans  &trans                                      &trans  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans             &trans             &trans              &trans              &trans  &trans                                      &trans  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &sticky_imqr LGUI  &sticky_imqr LALT  &sticky_imqr LCTRL  &sticky_imqr LSHFT  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &sticky_imqr RSHFT  &sticky_imqr RCTRL  &sticky_imqr RALT  &sticky_imqr RGUI  &trans
&trans  &trans             &trans             &trans              &trans              &trans                  &trans      &trans                  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans             &trans             &trans              &trans                      &trans  &trans  &trans      &trans  &trans  &trans          &trans              &trans              &trans             &trans             &trans
            >;
        };

        lnav {
            bindings = <
&trans  &trans             &trans             &trans              &trans              &trans  &trans                                          &trans  &trans  &trans    &trans    &trans        &trans     &trans
&trans  &trans             &trans             &trans              &trans              &trans  &trans                                          &trans  &trans  &trans    &trans    &trans        &trans     &trans
&trans  &sticky_imqr LGUI  &sticky_imqr LALT  &sticky_imqr LCTRL  &sticky_imqr LSHFT  &trans  &trans  &trans   &trans      &trans  &trans     &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans             &trans             &trans              &trans              &trans                   &trans      &trans                     &trans  &trans    &trans    &trans        &trans     &trans
&trans  &trans             &trans             &trans              &trans                      &trans  &kp TAB  &trans      &trans  &kp ENTER  &trans          &trans    &trans    &trans        &trans     &trans
            >;
        };

        lnum {
            bindings = <
&trans  &trans     &trans  &trans  &trans  &trans     &trans                                            &trans  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans     &kp N7  &kp N8  &kp N9  &kp N0     &trans                                            &trans  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL  &trans  &kp MINUS  &trans      &trans  &trans     &trans  &trans  &sticky_imqr RSHFT  &sticky_imqr RCTRL  &sticky_imqr RALT  &sticky_imqr RGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH                      &trans      &trans                     &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans     &trans  &trans  &trans             &trans  &kp TAB    &trans      &trans  &kp ENTER  &trans          &trans              &trans              &trans             &trans             &trans
            >;
        };

        lfun {
            bindings = <
&trans  &trans  &kp F10  &kp F11  &kp F12  &trans  &trans                                      &trans  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans  &kp F7   &kp F8   &kp F9   &trans  &trans                                      &trans  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans  &kp F4   &kp F5   &kp F6   &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &sticky_imqr RSHFT  &sticky_imqr RCTRL  &sticky_imqr RALT  &sticky_imqr RGUI  &trans
&trans  &trans  &kp F1   &kp F2   &kp F3   &trans                  &trans      &trans                  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans  &trans   &trans   &trans           &trans  &trans  &trans      &trans  &trans  &trans          &trans              &trans              &trans             &trans             &trans
            >;
        };

        lsym {
            bindings = <
&trans  &trans         &trans        &trans         &trans         &trans        &trans                                             &trans  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans         &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RPAR)  &trans                                             &trans  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)  &trans  &kp LS(UNDER)  &trans      &trans  &trans  &trans  &trans  &sticky_imqr RSHFT  &sticky_imqr RCTRL  &sticky_imqr RALT  &sticky_imqr RGUI  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)                         &trans      &trans                  &trans  &trans              &trans              &trans             &trans             &trans
&trans  &trans         &trans        &trans         &trans                       &trans  &trans         &trans      &trans  &trans  &trans          &trans              &trans              &trans             &trans             &trans
            >;
        };
    };
};
