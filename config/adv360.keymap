#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define LBASE 0
#define LGAMING 1
#define LNAV 2
#define LNUM 3
#define LSYM 4
#define LFN 5
#define LMAGIC 6
#define HRM_A hrm LGUI A
#define HRM_O hrm LALT O
#define HRM_E hrm LCTRL E
#define HRM_U hrm_i LSHFT U
#define HRM_S hrm RGUI S
#define HRM_N hrm RALT N
#define HRM_T hrm RCTRL T
#define HRM_H hrm_i RSHFT H

&sk { quick-release; };

/ {
    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        bt_4: bt_4 {
            label = "BT_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 4>;
        };

        par: par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PAR";
        };

        brc: brc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "BRC";
        };

        brck: brck {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RBKT &kp LEFT>;
            label = "BRCK";
        };

        squot: squot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SQT &kp LEFT>;
            label = "SQUOT";
        };

        dquot: dquot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT>;
            label = "DQUOT";
        };

        vimsave: vimsave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp W &kp RET>;
            label = "VIMSAVE";
        };
    };
};

/ {
    behaviors {
        tdcaps: tdcaps {
            compatible = "zmk,behavior-tap-dance";
            label = "TDCAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&kp CAPS>;
        };

        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_Base {
            bindings = <
&kp GRAVE   &kp N1     &kp N2     &kp N3    &kp N4    &kp N5  &kp LBKT                                                                      &kp RBKT   &kp N6  &kp N7    &kp N8    &kp N9  &kp N0     &kp MINUS
&kp TAB     &kp SQT    &kp COMMA  &kp DOT   &kp P     &kp Y   &kp LPAR                                                                      &kp RPAR   &kp F   &kp G     &kp C     &kp R   &kp L      &kp EQUAL
&kp ESC     &kp A      &kp O      &kp E     &kp U     &kp I   &kp LBRC   &kp LCTRL  &kp LALT               &kp RALT              &kp RCTRL  &kp RBRC   &kp D   &kp H     &kp T     &kp N   &kp S      &kp SEMI
&kp ESCAPE  &kp FSLH   &kp Q      &kp J     &kp K     &kp X                         &kp LGUI               &kp RGUI                                    &kp B   &kp M     &kp W     &kp V   &kp Z      &none
&mo 2       &kp GRAVE  &kp CAPS   &kp BSLH  &kp RBKT          &kp SPACE  &tdcaps    &kp LS(LA(LCTRL))      &kp LS(LA(LC(LGUI)))  &kp ENTER  &bspc_del          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &to 1
            >;
        };

        layer_Gaming {
            bindings = <
&kp N5  &kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp F5                                          &none  &none  &none  &none  &none  &none  &none
&kp N6  &kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                                           &none  &none  &none  &none  &none  &none  &none
&kp N7  &kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp G      &kp N5     &kp N6      &none  &none  &none  &none  &none  &none  &none  &none  &none
&kp N8  &kp LCTRL  &kp Z   &kp X   &kp C   &kp V                         &kp N7      &none                &none  &none  &none  &none  &none  &none
&mo 2   &kp LALT   &none   &none   &none           &kp SPACE  &kp LCTRL  &kp N8      &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };

        layer_Magic {
            bindings = <
&none        &none  &none  &none  &none                   &none  &none                                                   &none            &none  &none  &none  &none  &none  &none
&none        &none  &none  &none  &none                   &none  &none                                                   &none            &none  &none  &none  &none  &none  &none
&bootloader  &none  &none  &none  &none                   &none  &none  &bt_2  &bt_3             &bt BT_CLR  &none       &none            &none  &none  &none  &none  &none  &bootloader
&none        &none  &none  &none  &none                   &none                &bt_4             &bl BL_INC                               &none  &none  &none  &none  &none  &none
&none        &none  &none  &none  &rgb_ug RGB_MEFS_CMD 5         &bt_0  &bt_1  &out OUT_USB      &bl BL_DEC  &bl BL_TOG  &rgb_ug RGB_TOG         &none  &none  &none  &none  &none
            >;
        };
    };
};
